.. _envoy_v3_api_file_envoy/extensions/filters/http/gcp_authn/v3/gcp_authn.proto:

GCP authentication
==================




.. _extension_envoy.filters.http.gcp_authn:

This extension may be referenced by the qualified name ``envoy.filters.http.gcp_authn``

.. note::
  This extension is functional but has not had substantial production burn time, use only with this caveat.

  This extension has an unknown security posture and should only be used in deployments where both the downstream and upstream are trusted.

.. tip::
  This extension extends and can be used with the following extension category:


  - :ref:`envoy.filters.http <extension_category_envoy.filters.http>`

GCP authentication :ref:`configuration overview <config_http_filters_gcp_authn>`.

.. _envoy_v3_api_msg_extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig:

extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig
---------------------------------------------------------

:repo:`[extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig proto] <api/envoy/extensions/filters/http/gcp_authn/v3/gcp_authn.proto#L21>`

Filter configuration.

.. code-block:: json

  {
    "http_uri": "{...}",
    "retry_policy": "{...}"
  }

.. _envoy_v3_api_field_extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig.http_uri:

http_uri
  (:ref:`config.core.v3.HttpUri <envoy_v3_api_msg_config.core.v3.HttpUri>`, *REQUIRED*) The HTTP URI to fetch tokens from GCE Metadata Server(https://cloud.google.com/compute/docs/metadata/overview).
  The URL format is "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/identity?audience=[AUDIENCE]"
  
  
.. _envoy_v3_api_field_extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig.retry_policy:

retry_policy
  (:ref:`config.core.v3.RetryPolicy <envoy_v3_api_msg_config.core.v3.RetryPolicy>`) Retry policy for fetching tokens.
  This field is optional. If it is not configured, the filter will be fail-closed (i.e., reject the requests).
  
  


.. _envoy_v3_api_msg_extensions.filters.http.gcp_authn.v3.Audience:

extensions.filters.http.gcp_authn.v3.Audience
---------------------------------------------

:repo:`[extensions.filters.http.gcp_authn.v3.Audience proto] <api/envoy/extensions/filters/http/gcp_authn/v3/gcp_authn.proto#L31>`


.. code-block:: json

  {
    "audience_map": "{...}"
  }

.. _envoy_v3_api_field_extensions.filters.http.gcp_authn.v3.Audience.audience_map:

audience_map
  (**repeated** map<`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, `string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_>) The map of audience key to audience value.
  The key is defined as the contract with control plane in the configuration. It is fixed string "audience_key".
  The value is URL of the receiving service that performs token authentication.
  
  

